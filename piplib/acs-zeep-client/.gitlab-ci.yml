# GitLab CI/CD Pipeline for ACS ZEEP Client

stages:
  - test
  - build
  - release

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip/
    - venv/

# Test stage
test:python:
  stage: test
  image: python:3.11
  before_script:
    - python -m pip install --upgrade pip
    - pip install -e ".[dev]"
  script:
    - python -m pytest tests/ -v --tb=short
    - python -m flake8 acs_zeep_client/ --max-line-length=100 --ignore=E203,W503
    - python -m mypy acs_zeep_client/ --ignore-missing-imports
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  only:
    - merge_requests
    - main
    - develop

# Test import and CLI
test:import:
  stage: test
  image: python:3.11
  before_script:
    - python -m pip install --upgrade pip
    - pip install -e .
  script:
    - python -c "import acs_zeep_client; print('âœ… Package imports successfully')"
    - acs-zeep-cli --help
  only:
    - merge_requests
    - main
    - develop

# Build package
build:package:
  stage: build
  image: python:3.11
  before_script:
    - python -m pip install --upgrade pip build
  script:
    - python -m build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  only:
    - main
    - tags

# Release stage (only on tags)
release:pypi:
  stage: release
  image: python:3.11
  before_script:
    - python -m pip install --upgrade pip twine
  script:
    - echo "Ready to publish to PyPI"
    # Uncomment when ready to publish to PyPI:
    # - twine upload dist/*
  dependencies:
    - build:package
  only:
    - tags
  when: manual
